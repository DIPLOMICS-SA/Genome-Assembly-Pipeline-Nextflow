The 1KSA Genome Assembly Pipeline is intended for use on the CHPC and uses the following tools:
•	Dorado v0.7.0 for basecalling
•	Samtools v1.9 for converting bam files to fastq files
•	Nanoplot for quality check
•	Nanofilt for filtering and trimming
•	Flye v2.9 for genome assembly
•	Racon v1.5.0 for first round assembly polishing
•	Medaka v1.11.3 for second round assembly polishing
•	BUSCO v5.4.5 for assembly quality assessment
•	QUAST v4.6.3 for assembly quality assessment


Step 1 (Resource allocations):
Log on to the CHPC using your own user account. From there, open a screen session by typing the command:
screen
Screen allows one to run an interactive job uninterruptedly. You can close the screen session by pressing control and the letters A and D. Make sure to record the screen ID session, e.g; 77109.pts-66.login2. To reopen the same screen session, type in the following command:

screen -r 77109.pts-66.login2

Once the screen session has been open, request for compute resources using a job script and the following command:
qsub job.sh

One can request resources from two queues: serial long (Running the pipeline first for QC purposes) and bigmem (Running kmer analysis (Kmer-Analysis.sh - for determining estimated size, coverage and ploidy) and the rest of the pipeline as seriallong has only 128GB of RAM which is insufficient for assembly completion). 
SerialLong job script:
#!/bin/bash
#PBS -I -P CBBI1622 -m abe -M setshaba.taukobong@diplomics.org.za -q seriallong -l select=1:ncpus=10:mpiprocs=10 -l walltime=140:00:00

Bigmem job script:
#!/bin/bash
#PBS -I -P CBBI1622 -m abe -M setshaba.taukobong@diplomics.org.za -q bigmem -l select=1:ncpus=10:mpiprocs=10 -l walltime=48:00:00

Step 2 (Prepping pipeline and data):
Once you have been allocated resources, alter your pipeline by changing the directory of the input and output files (pod5 or fastq file), under “Define the default parameters” section the script i.e.:

params.outdir = '/mnt/lustre/users/staukobong/K_auricukata_data/results'
params.fastfiles = '/mnt/lustre/users/staukobong/K_auricukata_data/K_auricukata.fastq'

Step 3 (Loading modules and dependencies):
Load the following modules before running the pipeline:
•	module purge
•	module load chpc/BIOMODULES
•	module load dorado
•	module load samtools/1.9
•	module load nanoplot
•	module load nanofilt
•	module load flye/2.9
•	module load minimap2
•	module load racon/1.5.0
•	module load medaka/1.11.3
•	module load quast/4.6.3
•	module load quast/4.6.3
•	module load busco/5.4.5
•	module load bbmap/38.95
•	module load metaeuk
•	module load python
•	module load nextflow/23.10.0-all

Once the modules have been loaded, download the respective databases and models (this is subject to the basecall option you used on the sequencing machine and the Busco database one wants to use) by typing the following commands:
dorado download --model dna_r10.4.1_e8.2_400bps_hac@v4.2.0
busco --download eukaryota_odb10

Step 4 (Changing the parameters of Nanofilt and Flye):
Once you have determined the size and expected coverage using KMC and/or Jellyfish or Genome on a tree, these paarmeters should then be added on to Flye i.e Genome size (-g): 1.8 g, Reduced coverage (--asm-coverage): 25 x 

Step 5 (Running the pipeline):
Run the 1KSA Genome Assembly Pipeline using the following command:
nextflow run GenomeAssemblyPipelinev1.nf

With the following parameters:
Tool	Parameters
NanoFilt Quality (-q): 10 
Flye	ONT regular reads: --nano-raw
Reduced coverage (--asm-coverage): x 
Genome size (-g): x g
Racon	Match (-m): 8
Mismatch (-x): -8 
Gap (-g): -6 
BUSCO	Database: eukaryota_odb10 
Mode (-m): Genome 
Metaeuk gene predictor (--metaeuk_parameters): METAEUK_PARAMETERS --offline

Step 5 (Troubleshooting):
Suppose you run into an error during the run; after correcting the error, one can resume your run by typing the following command:
nextflow run GenomeAssemblyPipelinev1.nf -resume
